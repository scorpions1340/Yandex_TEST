import requests
import json
import time

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://localhost:8000"

def test_health():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è API"""
    try:
        response = requests.get(f"{BASE_URL}/api/health")
        print(f"Health check: {response.status_code}")
        print(f"Response: {response.json()}")
        return response.status_code == 200
    except Exception as e:
        print(f"Health check failed: {e}")
        return False

def test_model_info():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥–µ–ª–∏"""
    try:
        response = requests.get(f"{BASE_URL}/api/model-info")
        print(f"Model info: {response.status_code}")
        print(f"Response: {response.json()}")
        return response.status_code == 200
    except Exception as e:
        print(f"Model info failed: {e}")
        return False

def test_single_classification():
    """–¢–µ—Å—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ–¥–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞"""
    try:
        # –¢–µ—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
        data = {"text": "–≠—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç –ø—Ä–æ—Å—Ç–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π!"}
        response = requests.post(f"{BASE_URL}/api/classify", json=data)
        print(f"Single classification (RU): {response.status_code}")
        print(f"Response: {response.json()}")
        
        # –¢–µ—Å—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ
        data = {"text": "This product is amazing!"}
        response = requests.post(f"{BASE_URL}/api/classify", json=data)
        print(f"Single classification (EN): {response.status_code}")
        print(f"Response: {response.json()}")
        
        return response.status_code == 200
    except Exception as e:
        print(f"Single classification failed: {e}")
        return False

def test_batch_classification():
    """–¢–µ—Å—Ç –ø–∞–∫–µ—Ç–Ω–æ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    try:
        data = {
            "texts": [
                "–û—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å!",
                "–ú–Ω–µ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å",
                "–ù–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–æ –º–æ–≥–ª–æ –±—ã—Ç—å –ª—É—á—à–µ",
                "Amazing product!",
                "Terrible experience"
            ]
        }
        response = requests.post(f"{BASE_URL}/api/classify-batch", json=data)
        print(f"Batch classification: {response.status_code}")
        result = response.json()
        print(f"Total: {result.get('total')}")
        print(f"Positive: {result.get('positive_count')}")
        print(f"Negative: {result.get('negative_count')}")
        print(f"Neutral: {result.get('neutral_count')}")
        return response.status_code == 200
    except Exception as e:
        print(f"Batch classification failed: {e}")
        return False

def test_web_interface():
    """–¢–µ—Å—Ç –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    try:
        response = requests.get(BASE_URL)
        print(f"Web interface: {response.status_code}")
        return response.status_code == 200
    except Exception as e:
        print(f"Web interface failed: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("–ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API...")
    print("-" * 50)
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    print("–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    time.sleep(5)
    
    tests = [
        ("Health Check", test_health),
        ("Model Info", test_model_info),
        ("Single Classification", test_single_classification),
        ("Batch Classification", test_batch_classification),
        ("Web Interface", test_web_interface)
    ]
    
    results = []
    for test_name, test_func in tests:
        print(f"\n--- –¢–µ—Å—Ç: {test_name} ---")
        result = test_func()
        results.append((test_name, result))
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if result else '‚ùå –û—à–∏–±–∫–∞'}")
    
    print("\n" + "=" * 50)
    print("–ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    for test_name, result in results:
        print(f"{test_name}: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if result else '‚ùå –û—à–∏–±–∫–∞'}")
    
    all_passed = all(result for _, result in results)
    print(f"\n–û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã' if all_passed else '‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã'}")
    
    if all_passed:
        print("\nüéâ API –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print(f"–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: {BASE_URL}")
        print(f"–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: {BASE_URL}/docs")

if __name__ == "__main__":
    main()